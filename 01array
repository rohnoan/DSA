Definition: An array is a collection of elements, stored in contiguous memory locations, and accessible using indices.
Indexing: Elements are accessed using zero-based indexing (e.g., arr[0] for the first element).
Fixed Size: Arrays have a fixed size defined during declaration (e.g., int arr[5]).
Homogeneous Elements: All elements in an array must be of the same data type.
Insertion: Adding elements at the end is O(1), but inserting in the middle requires shifting (O(n)).
Deletion: Removing elements from the end is O(1), but deleting elsewhere involves shifting (O(n)).
Access Time: Direct access to any element is O(1) using its index.
Memory Efficiency: Arrays have low overhead but require contiguous memory, which can lead to fragmentation.
Dynamic Arrays: Some languages offer resizable arrays (e.g., std::vector in C++, ArrayList in Java).
Applications: Arrays are used in sorting, searching, and as building blocks for more complex data structures.

brute - 
better - 
best - 

1 largest element in array
    brute - sort and return the last index(nlogn)
    better - none
    best - simple for loop and variable max

2 second Largest Element 
    brute - sort and for loop from n-1 to 0 
    better - 2 for loops one for mx1 and one for mx2
    best - 1 for loop 
           2 variables - mx1 mx2

3 checkSorted?
    for(int i to n)
        if(nums[i]>nums[(i+1)%n])count++;

4 


